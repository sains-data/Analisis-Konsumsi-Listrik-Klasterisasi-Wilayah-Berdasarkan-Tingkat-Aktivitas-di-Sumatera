version: '3.8'

services:
  # ================== HDFS Services ==================
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data
    environment:
      - CLUSTER_NAME=electricity-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env
    networks:
      - electricity_network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - ./data:/data
    environment:
      - SERVICE_PRECONDITION=namenode:9870
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env
    networks:
      - electricity_network

  # ================== Hive Services ==================
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
      - hive-metastore
    env_file:
      - ./hadoop.env
    environment:
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore-postgresql/metastore
      - SERVICE_PRECONDITION=hive-metastore:9083
    ports:
      - "10000:10000"
    networks:
      - electricity_network

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864 hive-metastore-postgresql:5432
    ports:
      - "9083:9083"
    depends_on:
      - hive-metastore-postgresql
    networks:
      - electricity_network

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    environment:
      - POSTGRES_DB=metastore
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
    volumes:
      - hive_metastore:/var/lib/postgresql/data
    networks:
      - electricity_network

  # ================== Spark Services ==================
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    depends_on:
      - namenode
      - datanode
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./notebooks:/opt/workspace/notebooks
      - ./data:/opt/workspace/data
      - ./bronze:/opt/workspace/bronze
      - ./silver:/opt/workspace/silver
      - ./gold:/opt/workspace/gold
    networks:
      - electricity_network

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./notebooks:/opt/workspace/notebooks
      - ./data:/opt/workspace/data
      - ./bronze:/opt/workspace/bronze
      - ./silver:/opt/workspace/silver
      - ./gold:/opt/workspace/gold
    networks:
      - electricity_network

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./notebooks:/opt/workspace/notebooks
      - ./data:/opt/workspace/data
      - ./bronze:/opt/workspace/bronze
      - ./silver:/opt/workspace/silver
      - ./gold:/opt/workspace/gold
    networks:
      - electricity_network

  # ================== Jupyter Notebook with PySpark ==================
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: electricity_jupyter
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=electricity123
      - SPARK_MASTER=spark://spark-master:7077
      - PYSPARK_SUBMIT_ARGS=--master spark://spark-master:7077 pyspark-shell
    volumes:
      - ./:/home/jovyan/work
      - ./bronze:/home/jovyan/work/bronze
      - ./silver:/home/jovyan/work/silver
      - ./gold:/home/jovyan/work/gold
      - ./notebooks:/home/jovyan/work/notebooks
    depends_on:
      - spark-master
    networks:
      - electricity_network
    restart: unless-stopped

  # ================== Superset ==================
  superset-db:
    image: postgres:13
    container_name: superset-db
    environment:
      - POSTGRES_DB=superset
      - POSTGRES_USER=superset
      - POSTGRES_PASSWORD=superset
    volumes:
      - superset_db:/var/lib/postgresql/data
    networks:
      - electricity_network

  superset:
    image: apache/superset:latest
    container_name: superset
    depends_on:
      - superset-db
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_CONFIG_PATH=/app/superset_config.py
    volumes:
      - ./superset_config.py:/app/superset_config.py
      - superset_home:/app/superset_home
    command: >
      bash -c "
      superset db upgrade &&
      superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
      superset init &&
      superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "
    networks:
      - electricity_network
    restart: unless-stopped
  # ================== MinIO (S3-compatible storage) ==================
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9001:9001"
      - "9002:9002"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001" --address ":9002"
    networks:
      - electricity_network

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hive_metastore:
  superset_db:
  superset_home:
  minio_data:

networks:
  electricity_network:
    driver: bridge
